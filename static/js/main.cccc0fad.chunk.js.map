{"version":3,"sources":["img/portfolio_icon.PNG","img/tv_shuffle_screencap.PNG","img/album_collage_screencap.PNG","img/favorite_fonts_screencap.PNG","img/momentum_clone_screencap.PNG","img/web_template_screencap.PNG","img/portfolio_screencap.PNG","components/Navbar.jsx","components/Landing.jsx","data.js","components/Projects.jsx","components/Contact.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Navbar","className","activeClass","to","spy","smooth","src","portfolioIcon","alt","Landing","id","projects","name","screencap","tvShuffleImg","summary","stack","live","code","albumImg","fontsImg","momentumImg","templateImg","portfolioImg","Projects","projectCards","map","proj","i","word","key","href","target","rel","Contact","xmlns","viewBox","fillOpacity","d","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cccc0fad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portfolio_icon.72e98fe1.PNG\";","module.exports = __webpack_public_path__ + \"static/media/tv_shuffle_screencap.00e300a8.PNG\";","module.exports = __webpack_public_path__ + \"static/media/album_collage_screencap.60f2433c.PNG\";","module.exports = __webpack_public_path__ + \"static/media/favorite_fonts_screencap.e20ceee9.PNG\";","module.exports = __webpack_public_path__ + \"static/media/momentum_clone_screencap.f5ee7efa.PNG\";","module.exports = __webpack_public_path__ + \"static/media/web_template_screencap.2ff0d861.PNG\";","module.exports = __webpack_public_path__ + \"static/media/portfolio_screencap.48758d32.PNG\";","import React from 'react';\nimport { Link } from 'react-scroll';\nimport portfolioIcon from '../img/portfolio_icon.PNG';\n\nconst Navbar = () => (\n  <nav className=\"navbar\">\n    <ul>\n      <li className=\"home-btn\">\n        <Link activeClass=\"active\" to=\"landing\" spy smooth>\n          <img src={portfolioIcon} alt=\"Portfolio icon\" />\n        </Link>\n      </li>\n      <li>\n        <Link activeClass=\"active\" to=\"landing\" spy smooth>\n          About\n        </Link>\n      </li>\n      <li>\n        <Link activeClass=\"active\" to=\"projects\" spy smooth>\n          Projects\n        </Link>\n      </li>\n      <li>\n        <Link activeClass=\"active\" to=\"contact\" spy smooth>\n          Contact\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navbar;\n","import React from 'react';\n\nconst Landing = () => (\n  <section id=\"landing\">\n    <div className=\"intro\">\n      <div>\n        <h1>Hi, I&apos;m Danielle Rubin</h1>\n      </div>\n      <p>\n        I&apos;m a bioinformatician-turned-developer building things with\n        {' '}\n        <span>React</span>\n        , vanilla\n        {' '}\n        <span>JavaScript</span>\n        ,\n        {' '}\n        <span>Sass</span>\n        , and\n        {' '}\n        <span>HTML</span>\n        . I&apos;ve also worked with\n        {' '}\n        <span>Python</span>\n        ,\n        {' '}\n        <span>Bash</span>\n        , and\n        {' '}\n        <span>R</span>\n        . Thanks for stopping by!\n      </p>\n    </div>\n    <i className=\"fas fa-angle-double-down\" />\n  </section>\n);\n\nexport default Landing;\n","import tvShuffleImg from './img/tv_shuffle_screencap.PNG';\nimport albumImg from './img/album_collage_screencap.PNG';\nimport fontsImg from './img/favorite_fonts_screencap.PNG';\nimport momentumImg from './img/momentum_clone_screencap.PNG';\nimport templateImg from './img/web_template_screencap.PNG';\nimport portfolioImg from './img/portfolio_screencap.PNG';\n\nconst projects = [\n  {\n    name: 'TV Shuffle',\n    screencap: tvShuffleImg,\n    summary: 'TV Shuffle selects random episodes of TV shows for users to watch. Users can select any TV show available in TMDb, optionally select a season to shuffle within, and click a shuffle button to randomly select an episode. This is a Progressive Web App and is deployed with AWS Amplify.',\n    stack: ['React', 'HTML', 'Sass', 'Axios', 'React Testing Library', 'ESLint', 'stylelint'],\n    live: 'https://www.tvshufflebutton.com',\n    code: 'https://github.com/dlhrubin/tv-shuffle',\n  },\n  {\n    name: 'Album Collage',\n    screencap: albumImg,\n    summary: 'Album Collage is a tool for generating collages of album covers. Users can select any artist and album available in the Last.fm database and drag-and-drop in the selection box to re-order album selections. Collage shapes are dynamically generated for each possible number of album covers. Collages can be edited, shuffled, reset, and deleted.',\n    stack: ['React', 'HTML', 'Sass', 'Axios', 'React DnD', 'html2canvas', 'Enzyme', 'Jest', 'ESLint', 'stylelint'],\n    live: 'https://www.albumcollage.com',\n    code: 'https://github.com/dlhrubin/album-collage',\n  },\n  {\n    name: 'Favorite Fonts',\n    screencap: fontsImg,\n    summary: 'Favorite Fonts is a fully responsive clone of Google Fonts built with React. Users can view 900+ fonts, search for specific fonts, display fonts with custom text, and change font size. Additional features: lazy-loading font cards, dark mode, grid/list layout toggle, reset, and sticky navigation bar.',\n    stack: ['React', 'HTML', 'Sass', 'Axios', 'Enzyme', 'Jest', 'ESLint'],\n    live: 'https://dlhrubin.github.io/favorite-fonts/',\n    code: 'https://github.com/dlhrubin/favorite-fonts',\n  },\n  {\n    name: 'Momentum Clone',\n    screencap: momentumImg,\n    summary: 'This vanilla JavaScript project replicates the front-end functionality of the Google Chrome extension Momentum. It includes a clock and timely greeting, the current weather given location, a customizable list of links, a Google search bar, a to do list, an inspirational quote, and a background image. The user can set a \"main focus\" for the day and customize their name.',\n    stack: ['JavaScript', 'HTML', 'CSS'],\n    live: 'https://chingu-voyages.github.io/momentum-clone/',\n    code: 'https://github.com/chingu-voyages/momentum-clone',\n  },\n  {\n    name: 'Web Template Clone',\n    screencap: templateImg,\n    summary: 'This responsive template was created as a clone of the Conquer template on templatemo. It includes a basic template with headers and content cards, a parallax effect on header images, responsive design, and enhanced user experience with smooth transitions and scrolling using vanilla JavaScript.',\n    stack: ['JavaScript', 'HTML', 'CSS'],\n    live: 'https://dlhrubin.github.io/web-template-clone/',\n    code: 'https://github.com/dlhrubin/web-template-clone',\n  },\n  {\n    name: 'Portfolio',\n    screencap: portfolioImg,\n    summary: 'My personal website and portfolio was built with React. It includes my basic information, contact links, and project links and descriptions on dynamically populated content cards.',\n    stack: ['React', 'HTML', 'Sass', 'ESLint', 'stylelint'],\n    live: 'https://dlhrubin.com',\n    code: 'https://github.com/dlhrubin/portfolio',\n  },\n];\n\nexport default projects;\n","import React from 'react';\nimport projects from '../data';\n\nconst Projects = () => {\n  const projectCards = projects.map((proj, i) => {\n    const stack = proj.stack.map((word) => <span key={word}>{word}</span>);\n    return (\n      <div key={proj.name} className=\"card\">\n        <div className=\"image-container\">\n          <a href={proj.live} target=\"_blank\" rel=\"noopener noreferrer\">\n            <div className=\"hover-screen\">\n              <img src={proj.screencap} alt={proj.name} />\n            </div>\n          </a>\n        </div>\n        <div className=\"info\">\n          <h2>{proj.name}</h2>\n          <div className=\"details\">\n            <p>{proj.summary}</p>\n            <div>\n              <div className=\"tech\">\n                {stack}\n              </div>\n              <div className=\"links\">\n                <a className=\"live-link\" href={proj.live} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Live\n                  <i className=\"fas fa-desktop\" />\n                </a>\n                <a className=\"code-link\" href={proj.code} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Code\n                  <i className=\"fas fa-code\" />\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  });\n  return (\n    <section id=\"projects\">\n      <div>\n        {projectCards}\n      </div>\n    </section>\n  );\n};\n\nexport default Projects;\n","import React from 'react';\n\nconst Contact = () => (\n  <footer id=\"contact\">\n    <div className=\"bottom overlays\">\n      <svg className=\"contact-overlay\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n        <path fillOpacity=\"1\" d=\"M0,160L20,144C40,128,80,96,120,112C160,128,200,192,240,208C280,224,320,192,360,170.7C400,149,440,139,480,149.3C520,160,560,192,600,186.7C640,181,680,139,720,128C760,117,800,139,840,133.3C880,128,920,96,960,106.7C1000,117,1040,171,1080,181.3C1120,192,1160,160,1200,133.3C1240,107,1280,85,1320,80C1360,75,1400,85,1420,90.7L1440,96L1440,320L1420,320C1400,320,1360,320,1320,320C1280,320,1240,320,1200,320C1160,320,1120,320,1080,320C1040,320,1000,320,960,320C920,320,880,320,840,320C800,320,760,320,720,320C680,320,640,320,600,320C560,320,520,320,480,320C440,320,400,320,360,320C320,320,280,320,240,320C200,320,160,320,120,320C80,320,40,320,20,320L0,320Z\" />\n      </svg>\n    </div>\n    <span>\n      Coded & designed with\n      {' '}\n      <i className=\"fas fa-heart\" />\n      {' '}\n      by Danielle Rubin | Copyright &copy; 2020\n    </span>\n    <div className=\"contact-links\">\n      <a href=\"https://github.com/dlhrubin\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <i className=\"fab fa-github\" />\n        <span>GitHub</span>\n      </a>\n      <a href=\"https://www.linkedin.com/in/dlhrubin/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <i className=\"fab fa-linkedin\" />\n        <span>LinkedIn</span>\n      </a>\n      <a href=\"mailto:dlhrubin@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <i className=\"far fa-envelope\" />\n        <span>Email</span>\n      </a>\n    </div>\n  </footer>\n);\n\nexport default Contact;\n","import React from 'react';\nimport Navbar from './components/Navbar';\nimport Landing from './components/Landing';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <div className=\"top overlays\">\n        <svg className=\"white-overlay\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fillOpacity=\"1\" d=\"M0,224L80,240C160,256,320,288,480,272C640,256,800,192,960,149.3C1120,107,1280,85,1360,74.7L1440,64L1440,0L1360,0C1280,0,1120,0,960,0C800,0,640,0,480,0C320,0,160,0,80,0L0,0Z\" /></svg>\n        <svg className=\"bright-overlay\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fillOpacity=\"1\" d=\"M0,320L48,282.7C96,245,192,171,288,117.3C384,64,480,32,576,53.3C672,75,768,149,864,165.3C960,181,1056,139,1152,106.7C1248,75,1344,53,1392,42.7L1440,32L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\" /></svg>\n      </div>\n      <main className=\"content\">\n        <Landing />\n        <Projects />\n      </main>\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}