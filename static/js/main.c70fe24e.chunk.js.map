{"version":3,"sources":["img/portfolio_icon.PNG","img/favorite_fonts_screencap.PNG","img/album_collage_screencap.PNG","img/momentum_clone_screencap.PNG","img/web_template_screencap.PNG","img/portfolio_screencap.PNG","components/Navbar.js","components/Landing.js","data.js","components/Projects.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","activeClass","to","spy","smooth","src","portfolioIcon","alt","Component","Landing","id","projects","name","screencap","img1","summary","stack","live","code","img2","img3","img4","img5","Projects","projectCards","map","proj","i","word","key","href","target","rel","Contact","xmlns","viewBox","fillOpacity","d","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c70fe24e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portfolio_icon.72e98fe1.PNG\";","module.exports = __webpack_public_path__ + \"static/media/favorite_fonts_screencap.e20ceee9.PNG\";","module.exports = __webpack_public_path__ + \"static/media/album_collage_screencap.19a29a71.PNG\";","module.exports = __webpack_public_path__ + \"static/media/momentum_clone_screencap.f5ee7efa.PNG\";","module.exports = __webpack_public_path__ + \"static/media/web_template_screencap.2ff0d861.PNG\";","module.exports = __webpack_public_path__ + \"static/media/portfolio_screencap.48758d32.PNG\";","import React, {Component} from \"react\";\r\nimport {Link} from \"react-scroll\";\r\nimport portfolioIcon from \"../img/portfolio_icon.PNG\";\r\n\r\nexport class Navbar extends Component {\r\n    render() {\r\n        return(\r\n            <nav className=\"navbar\">\r\n                <ul>\r\n                    <li className=\"home-btn\">\r\n                        <Link activeClass=\"active\" to=\"landing\" spy={true} smooth={true}>\r\n                            <img src={portfolioIcon} alt=\"Portfolio icon\" />\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link activeClass=\"active\" to=\"landing\" spy={true} smooth={true}>\r\n                            About\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link activeClass=\"active\" to=\"projects\" spy={true} smooth={true}>\r\n                            Projects\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link activeClass=\"active\" to=\"contact\" spy={true} smooth={true}>\r\n                            Contact\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\n\r\nexport class Landing extends Component {\r\n    render() {\r\n        return(\r\n            <section id=\"landing\">\r\n                <div className=\"intro\">\r\n                    <div>\r\n                        <h1>Hi, I'm Danielle Rubin</h1>\r\n                    </div>\r\n                    <p>I'm a bioinformatician-turned-developer building things with <span>React</span>, vanilla <span>JavaScript</span>, <span>Sass</span>, and <span>HTML</span>. I've also worked with <span>Python</span>, <span>Bash</span>, and <span>R</span>. Thanks for stopping by! </p>\r\n                </div>\r\n                <i className=\"fas fa-angle-double-down\"></i>\r\n            </section>\r\n        )\r\n    }\r\n}","import img1 from \"./img/favorite_fonts_screencap.PNG\";\r\nimport img2 from \"./img/album_collage_screencap.PNG\";\r\nimport img3 from \"./img/momentum_clone_screencap.PNG\";\r\nimport img4 from \"./img/web_template_screencap.PNG\";\r\nimport img5 from \"./img/portfolio_screencap.PNG\";\r\n\r\nconst projects = [\r\n    {\r\n        name: \"Favorite Fonts\", \r\n        screencap: img1, \r\n        summary: \"Favorite Fonts is a fully responsive clone of Google Fonts built with React. Users can view 900+ fonts, search for specific fonts, display fonts with custom text, and change font size. Additional features: lazy-loading font cards, dark mode, grid/list layout toggle, reset, and sticky navigation bar.\", \r\n        stack: [\"React\", \"JavaScript\", \"HTML\", \"Sass\", \"Axios\", \"Enzyme\", \"Jest\", \"ESLint\"],\r\n        live: \"https://dlhrubin.github.io/favorite-fonts/\",\r\n        code: \"https://github.com/dlhrubin/favorite-fonts\"                  \r\n    },\r\n    {\r\n        name: \"Album Collage\", \r\n        screencap: img2, \r\n        summary: \"Album Collage is a tool for generating collages of album covers. Users can select any artist and album available in the Last.fm database and drag-and-drop in the selection box to re-order album selections. Collage shapes are dynamically generated for each possible number of album covers. Collages can be edited, shuffled, reset, and deleted.\", \r\n        stack: [\"React\", \"JavaScript\", \"HTML\", \"Sass\", \"Axios\"],\r\n        live: \"https://www.albumcollage.com\",\r\n        code: \"https://github.com/dlhrubin/album-collage\"                  \r\n    },\r\n    {\r\n        name: \"Momentum Clone\", \r\n        screencap: img3, \r\n        summary: \"This vanilla JavaScript project replicates the front-end functionality of the Google Chrome extension Momentum. It includes a clock and timely greeting, the current weather given location, a customizable list of links, a Google search bar, a to do list, an inspirational quote, and a background image. The user can set a \\\"main focus\\\" for the day and customize their name.\",\r\n        stack: [\"JavaScript\", \"HTML\", \"CSS\"],\r\n        live: \"https://chingu-voyages.github.io/momentum-clone/\",\r\n        code: \"https://github.com/chingu-voyages/momentum-clone\"\r\n    }, \r\n    {\r\n        name: \"Web Template Clone\", \r\n        screencap: img4, \r\n        summary: \"This responsive template was created as a clone of the Conquer template on templatemo. It includes a basic template with headers and content cards, a parallax effect on header images, responsive design, and enhanced user experience with smooth transitions and scrolling using vanilla JavaScript.\",\r\n        stack: [\"JavaScript\", \"HTML\", \"CSS\"],\r\n        live: \"https://dlhrubin.github.io/web-template-clone/\", \r\n        code: \"https://github.com/dlhrubin/web-template-clone\"\r\n    },\r\n    {\r\n        name: \"Portfolio\", \r\n        screencap: img5,\r\n        summary: \"My personal website and portfolio was built with React. It includes my basic information, contact links, and project links and descriptions on dynamically populated content cards.\",\r\n        stack: [\"React\", \"JavaScript\", \"HTML\", \"Sass\"],\r\n        live: \"https://dlhrubin.com\",\r\n        code: \"https://github.com/dlhrubin/portfolio\"\r\n    }\r\n]\r\n\r\nexport default projects;","import React, {Component} from \"react\";\r\nimport projects from \"../data.js\";\r\n\r\nexport class Projects extends Component {\r\n    render() {\r\n        let projectCards = projects.map((proj, i) => {\r\n            let stack = proj.stack.map(word => <span key={word}>{word}</span>)\r\n            return (\r\n                <div key={i} className=\"card\">\r\n                    <div className=\"image-container\">\r\n                        <a href={proj.live} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <div className=\"hover-screen\">\r\n                                <img src={proj.screencap} alt={proj.name}/>\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <h2>{proj.name}</h2>\r\n                        <div className=\"details\">\r\n                            <p>{proj.summary}</p>\r\n                            <div>\r\n                                <div className=\"tech\">\r\n                                    {stack}\r\n                                </div>\r\n                                <div className=\"links\">\r\n                                    <a className=\"live-link\" href={proj.live} target=\"_blank\" rel=\"noopener noreferrer\">Live\r\n                                        <i className=\"fas fa-desktop\"></i>                                    </a>\r\n                                    <a className=\"code-link\" href={proj.code} target=\"_blank\" rel=\"noopener noreferrer\">Code\r\n                                        <i className=\"fas fa-code\"></i>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return(\r\n            <section id=\"projects\">\r\n                <div>\r\n                    {projectCards}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\n\r\nexport class Contact extends Component {\r\n    render() {\r\n        return(\r\n            <footer id=\"contact\">\r\n                <div className=\"bottom overlays\">\r\n                    <svg className=\"contact-overlay\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n                        <path fillOpacity=\"1\" d=\"M0,160L20,144C40,128,80,96,120,112C160,128,200,192,240,208C280,224,320,192,360,170.7C400,149,440,139,480,149.3C520,160,560,192,600,186.7C640,181,680,139,720,128C760,117,800,139,840,133.3C880,128,920,96,960,106.7C1000,117,1040,171,1080,181.3C1120,192,1160,160,1200,133.3C1240,107,1280,85,1320,80C1360,75,1400,85,1420,90.7L1440,96L1440,320L1420,320C1400,320,1360,320,1320,320C1280,320,1240,320,1200,320C1160,320,1120,320,1080,320C1040,320,1000,320,960,320C920,320,880,320,840,320C800,320,760,320,720,320C680,320,640,320,600,320C560,320,520,320,480,320C440,320,400,320,360,320C320,320,280,320,240,320C200,320,160,320,120,320C80,320,40,320,20,320L0,320Z\"></path>\r\n                    </svg>\r\n                </div>\r\n                <span>Coded & Designed with <i className=\"fas fa-heart\"></i> by Danielle Rubin | Copyright &copy; 2020</span>\r\n                <div className=\"contact-links\">\r\n                    <a href=\"https://github.com/dlhrubin\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-github\"></i>\r\n                        <span>GitHub</span>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/in/dlhrubin/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-linkedin\"></i>\r\n                        <span>LinkedIn</span>\r\n                    </a>\r\n                    <a href=\"mailto:dlhrubin@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"far fa-envelope\"></i>\r\n                        <span>Email</span>\r\n                    </a>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport {Navbar} from \"./components/Navbar\";\nimport {Landing} from \"./components/Landing\";\nimport {Projects} from \"./components/Projects\";\nimport {Contact} from \"./components/Contact\";\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <div className=\"top overlays\">\n          <svg className=\"white-overlay\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fillOpacity=\"1\" d=\"M0,224L80,240C160,256,320,288,480,272C640,256,800,192,960,149.3C1120,107,1280,85,1360,74.7L1440,64L1440,0L1360,0C1280,0,1120,0,960,0C800,0,640,0,480,0C320,0,160,0,80,0L0,0Z\"></path></svg>\n          <svg className=\"bright-overlay\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fillOpacity=\"1\" d=\"M0,320L48,282.7C96,245,192,171,288,117.3C384,64,480,32,576,53.3C672,75,768,149,864,165.3C960,181,1056,139,1152,106.7C1248,75,1344,53,1392,42.7L1440,32L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"></path></svg>\n      </div>\n      <main className=\"content\">\n        <Landing />\n        <Projects />\n      </main>\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}